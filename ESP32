#include <Arduino.h>
#include "Wire.h"
#include <ESP32SPISlave.h>

//definiciones para I2C
#define I2C_DEV_ADDR 0x55
#define potenciometro 35
#define LED1 15
#define LED2 2
#define LED3 4


//settings del SPI
ESP32SPISlave slave; 

static constexpr uint32_t BUFFER_SIZE{32};
uint8_t spi_slave_rx_buf[BUFFER_SIZE];
uint8_t led;
int tiempo[4] = {0, 0, 0, 0};


int envio = 0;
uint16_t lectura;
uint8_t sensor;

void onRequest();
void onReceive(int len);
void leds(int tiempo[], uint8_t led);

void setup()
{
  Serial.begin(115200);
  delay(2000);
  delay(2000);
  Serial.setDebugOutput(true);
  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
  pinMode(LED3, OUTPUT);
  Wire.onReceive(onReceive);
  Wire.onRequest(onRequest);
  Wire.begin((uint8_t)I2C_DEV_ADDR);

  slave.setDataMode(SPI_MODE0);
  slave.setQueueSize(1);
  slave.begin(VSPI);

  
  memset(spi_slave_rx_buf, 0, BUFFER_SIZE);

}

void loop()
{
  slave.wait(spi_slave_rx_buf, NULL, BUFFER_SIZE);

  while(slave.available()){
    Serial.println("Spi data: ");
    led = ((uint8_t)spi_slave_rx_buf[0]-48);
    for(int i = 2; i < 6; i++){
      tiempo[i-2] = ((int)spi_slave_rx_buf[i]-48); 
      Serial.println(tiempo[i-2]);
    }
    leds(tiempo, led);
    slave.pop();
    
  } 


}
void onRequest()
{
  delay(100);
  if(envio == 1){
    Serial.println("Preparando dato I2C");
    lectura = analogRead(potenciometro);
    sensor = map(lectura, 0, 4095, 0, 254);
    Serial. print("Dato enviado: ");
    Serial.println(sensor);
    Wire.write(sensor);
    envio = 0; 
  } 
}
void onReceive(int len)
{
  Serial.printf("onReceive[%d]: \n", len);
  while(Wire.available())
  {
    uint8_t incomingByte = Wire.read(); 
    Serial.write(incomingByte);
    if(incomingByte == '1'){
      envio = 1; 
    }
  }
}
void leds(int tiempo[], uint8_t led){
  int tiempo_total; 
  if(tiempo[3] == -48){
    tiempo_total = (tiempo[0]*100) + (tiempo[1]*10) + (tiempo[2]);
  }
  else{
    tiempo_total = (tiempo[0]*1000) + (tiempo[1]*100) + (tiempo[2]*10) + tiempo[3];
  }
  Serial.println(tiempo_total);
  if(led == 1){
    digitalWrite(LED1, HIGH);
    delay(tiempo_total);
    digitalWrite(LED1, LOW);
  }
  else if(led == 2){
    digitalWrite(LED2, HIGH);
    delay(tiempo_total);
    digitalWrite(LED2, LOW);
  }
  else if(led == 3){
    digitalWrite(LED3, HIGH);
    delay(tiempo_total);
    digitalWrite(LED3, LOW);
  }
}
